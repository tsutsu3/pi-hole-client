// Mocks generated by Mockito 5.4.5 from annotations
// in pi_hole_client/test/widgets/screens/settings/app_settings/advanced_options_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i11;

import 'package:device_info_plus/device_info_plus.dart' as _i8;
import 'package:flutter/material.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:package_info_plus/package_info_plus.dart' as _i7;
import 'package:pi_hole_client/config/theme.dart' as _i2;
import 'package:pi_hole_client/gateways/api_gateway_interface.dart' as _i15;
import 'package:pi_hole_client/models/app_log.dart' as _i6;
import 'package:pi_hole_client/models/query_status.dart' as _i14;
import 'package:pi_hole_client/models/repository/database.dart' as _i10;
import 'package:pi_hole_client/models/server.dart' as _i13;
import 'package:pi_hole_client/providers/app_config_provider.dart' as _i3;
import 'package:pi_hole_client/providers/servers_provider.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppColors_0 extends _i1.SmartFake implements _i2.AppColors {
  _FakeAppColors_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppConfigProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppConfigProvider extends _i1.Mock implements _i3.AppConfigProvider {
  MockAppConfigProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppColors get colors =>
      (super.noSuchMethod(
            Invocation.getter(#colors),
            returnValue: _FakeAppColors_0(this, Invocation.getter(#colors)),
          )
          as _i2.AppColors);

  @override
  bool get showingSnackbar =>
      (super.noSuchMethod(
            Invocation.getter(#showingSnackbar),
            returnValue: false,
          )
          as bool);

  @override
  int get selectedTab =>
      (super.noSuchMethod(Invocation.getter(#selectedTab), returnValue: 0)
          as int);

  @override
  _i4.ThemeMode get selectedTheme =>
      (super.noSuchMethod(
            Invocation.getter(#selectedTheme),
            returnValue: _i4.ThemeMode.system,
          )
          as _i4.ThemeMode);

  @override
  String get selectedLanguage =>
      (super.noSuchMethod(
            Invocation.getter(#selectedLanguage),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#selectedLanguage),
            ),
          )
          as String);

  @override
  int get selectedThemeNumber =>
      (super.noSuchMethod(
            Invocation.getter(#selectedThemeNumber),
            returnValue: 0,
          )
          as int);

  @override
  int get selectedLanguageNumber =>
      (super.noSuchMethod(
            Invocation.getter(#selectedLanguageNumber),
            returnValue: 0,
          )
          as int);

  @override
  bool get overrideSslCheck =>
      (super.noSuchMethod(
            Invocation.getter(#overrideSslCheck),
            returnValue: false,
          )
          as bool);

  @override
  bool get reducedDataCharts =>
      (super.noSuchMethod(
            Invocation.getter(#reducedDataCharts),
            returnValue: false,
          )
          as bool);

  @override
  double get logsPerQuery =>
      (super.noSuchMethod(Invocation.getter(#logsPerQuery), returnValue: 0.0)
          as double);

  @override
  bool get biometricsSupport =>
      (super.noSuchMethod(
            Invocation.getter(#biometricsSupport),
            returnValue: false,
          )
          as bool);

  @override
  bool get useBiometrics =>
      (super.noSuchMethod(Invocation.getter(#useBiometrics), returnValue: false)
          as bool);

  @override
  bool get appUnlocked =>
      (super.noSuchMethod(Invocation.getter(#appUnlocked), returnValue: false)
          as bool);

  @override
  bool get validVibrator =>
      (super.noSuchMethod(Invocation.getter(#validVibrator), returnValue: false)
          as bool);

  @override
  bool get importantInfoReaden =>
      (super.noSuchMethod(
            Invocation.getter(#importantInfoReaden),
            returnValue: false,
          )
          as bool);

  @override
  bool get hideZeroValues =>
      (super.noSuchMethod(
            Invocation.getter(#hideZeroValues),
            returnValue: false,
          )
          as bool);

  @override
  int get statisticsVisualizationMode =>
      (super.noSuchMethod(
            Invocation.getter(#statisticsVisualizationMode),
            returnValue: 0,
          )
          as int);

  @override
  bool get sendCrashReports =>
      (super.noSuchMethod(
            Invocation.getter(#sendCrashReports),
            returnValue: false,
          )
          as bool);

  @override
  List<_i6.AppLog> get logs =>
      (super.noSuchMethod(Invocation.getter(#logs), returnValue: <_i6.AppLog>[])
          as List<_i6.AppLog>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void setShowingSnackbar(bool? status) => super.noSuchMethod(
    Invocation.method(#setShowingSnackbar, [status]),
    returnValueForMissingStub: null,
  );

  @override
  void setSelectedTab(int? selectedTab) => super.noSuchMethod(
    Invocation.method(#setSelectedTab, [selectedTab]),
    returnValueForMissingStub: null,
  );

  @override
  void setAppInfo(_i7.PackageInfo? appInfo) => super.noSuchMethod(
    Invocation.method(#setAppInfo, [appInfo]),
    returnValueForMissingStub: null,
  );

  @override
  void setAndroidInfo(_i8.AndroidDeviceInfo? deviceInfo) => super.noSuchMethod(
    Invocation.method(#setAndroidInfo, [deviceInfo]),
    returnValueForMissingStub: null,
  );

  @override
  void setIosInfo(_i8.IosDeviceInfo? deviceInfo) => super.noSuchMethod(
    Invocation.method(#setIosInfo, [deviceInfo]),
    returnValueForMissingStub: null,
  );

  @override
  void setBiometricsSupport(bool? isSupported) => super.noSuchMethod(
    Invocation.method(#setBiometricsSupport, [isSupported]),
    returnValueForMissingStub: null,
  );

  @override
  void setAppUnlocked(bool? status) => super.noSuchMethod(
    Invocation.method(#setAppUnlocked, [status]),
    returnValueForMissingStub: null,
  );

  @override
  void setValidVibrator(bool? valid) => super.noSuchMethod(
    Invocation.method(#setValidVibrator, [valid]),
    returnValueForMissingStub: null,
  );

  @override
  void addLog(_i6.AppLog? log) => super.noSuchMethod(
    Invocation.method(#addLog, [log]),
    returnValueForMissingStub: null,
  );

  @override
  void setSelectedSettingsScreen({required int? screen, bool? notify}) =>
      super.noSuchMethod(
        Invocation.method(#setSelectedSettingsScreen, [], {
          #screen: screen,
          #notify: notify,
        }),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<bool> setUseBiometrics(bool? biometrics) =>
      (super.noSuchMethod(
            Invocation.method(#setUseBiometrics, [biometrics]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setImportantInfoReaden(bool? status) =>
      (super.noSuchMethod(
            Invocation.method(#setImportantInfoReaden, [status]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setPassCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#setPassCode, [code]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setAutoRefreshTime(int? seconds) =>
      (super.noSuchMethod(
            Invocation.method(#setAutoRefreshTime, [seconds]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setLogsPerQuery(double? time) =>
      (super.noSuchMethod(
            Invocation.method(#setLogsPerQuery, [time]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setSendCrashReports(bool? status) =>
      (super.noSuchMethod(
            Invocation.method(#setSendCrashReports, [status]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  void saveFromDb(_i10.AppDbData? dbData) => super.noSuchMethod(
    Invocation.method(#saveFromDb, [dbData]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<bool> setOverrideSslCheck(bool? status) =>
      (super.noSuchMethod(
            Invocation.method(#setOverrideSslCheck, [status]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setReducedDataCharts(bool? status) =>
      (super.noSuchMethod(
            Invocation.method(#setReducedDataCharts, [status]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setHideZeroValues(bool? status) =>
      (super.noSuchMethod(
            Invocation.method(#setHideZeroValues, [status]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setSelectedTheme(int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setSelectedTheme, [value]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setSelectedLanguage(String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setSelectedLanguage, [value]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setStatisticsVisualizationMode(int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStatisticsVisualizationMode, [value]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> restoreAppConfig() =>
      (super.noSuchMethod(
            Invocation.method(#restoreAppConfig, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ServersProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockServersProvider extends _i1.Mock implements _i12.ServersProvider {
  MockServersProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppColors get colors =>
      (super.noSuchMethod(
            Invocation.getter(#colors),
            returnValue: _FakeAppColors_0(this, Invocation.getter(#colors)),
          )
          as _i2.AppColors);

  @override
  List<_i13.Server> get getServersList =>
      (super.noSuchMethod(
            Invocation.getter(#getServersList),
            returnValue: <_i13.Server>[],
          )
          as List<_i13.Server>);

  @override
  int get numShown =>
      (super.noSuchMethod(Invocation.getter(#numShown), returnValue: 0) as int);

  @override
  List<_i14.QueryStatus> get queryStatuses =>
      (super.noSuchMethod(
            Invocation.getter(#queryStatuses),
            returnValue: <_i14.QueryStatus>[],
          )
          as List<_i14.QueryStatus>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void update(_i3.AppConfigProvider? provider) => super.noSuchMethod(
    Invocation.method(#update, [provider]),
    returnValueForMissingStub: null,
  );

  @override
  _i15.ApiGateway? loadApiGateway(_i13.Server? server) =>
      (super.noSuchMethod(Invocation.method(#loadApiGateway, [server]))
          as _i15.ApiGateway?);

  @override
  _i14.QueryStatus? getQueryStatus(String? key) =>
      (super.noSuchMethod(Invocation.method(#getQueryStatus, [key]))
          as _i14.QueryStatus?);

  @override
  _i14.QueryStatus? findQueryStatus(String? key) =>
      (super.noSuchMethod(Invocation.method(#findQueryStatus, [key]))
          as _i14.QueryStatus?);

  @override
  _i9.Future<bool> addServer(_i13.Server? server) =>
      (super.noSuchMethod(
            Invocation.method(#addServer, [server]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> editServer(_i13.Server? server) =>
      (super.noSuchMethod(
            Invocation.method(#editServer, [server]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> removeServer(String? serverAddress) =>
      (super.noSuchMethod(
            Invocation.method(#removeServer, [serverAddress]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> setDefaultServer(_i13.Server? server) =>
      (super.noSuchMethod(
            Invocation.method(#setDefaultServer, [server]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<dynamic> saveFromDb(List<_i10.ServerDbData>? servers) =>
      (super.noSuchMethod(
            Invocation.method(#saveFromDb, [servers]),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.FutureOr<Map<String, dynamic>> checkUrlExists(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#checkUrlExists, [url]),
            returnValue: _i9.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i9.FutureOr<Map<String, dynamic>>);

  @override
  void setselectedServer({required _i13.Server? server, bool? toHomeTab}) =>
      super.noSuchMethod(
        Invocation.method(#setselectedServer, [], {
          #server: server,
          #toHomeTab: toHomeTab,
        }),
        returnValueForMissingStub: null,
      );

  @override
  void updateselectedServerStatus(bool? enabled) => super.noSuchMethod(
    Invocation.method(#updateselectedServerStatus, [enabled]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<bool> deleteDbData() =>
      (super.noSuchMethod(
            Invocation.method(#deleteDbData, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> resetSelectedServer() =>
      (super.noSuchMethod(
            Invocation.method(#resetSelectedServer, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
