# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    - prefer_single_quotes
    - always_declare_return_types
    - annotate_overrides
    - prefer_const_constructors
    - prefer_final_fields
    - avoid_print
    - use_colored_box
    - avoid_unused_constructor_parameters
    - avoid_empty_else
    - avoid_function_literals_in_foreach_calls
    - avoid_init_to_null
    - avoid_relative_lib_imports
    - require_trailing_commas

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
analyzer:
  plugins:
    - dart_code_linter
  errors:
    invalid_annotation_target: ignore
  exclude:
    - test/**
    - lib/**/*.g.dart
    - lib/screens/settings/about/about.dart

dart_code_linter:
  rules:
    - avoid-unused-assignment
    - avoid-unused-generics
    - avoid-unused-instances
    - avoid-unused-parameters
    - prefer-trailing-comma
    - check-unused-files
    - check-unused-code

dart_code_metrics:
  extends:
    - recommended
  metrics:
    cyclomatic-complexity: 20
    halstead-volume: 150
    lines-of-code: 100
    maintainability-index: 50
    maximum-nesting-level: 5
    number-of-parameters: 4
    number-of-used-widgets: 20
    source-lines-of-code: 50
    widgets-nesting-level: 10
  metrics-exclude:
    - test/**
  rules:
    - member-ordering
    - no-object-declaration
    - prefer-match-file-name: false
    - no-empty-block: false