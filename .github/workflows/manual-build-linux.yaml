name: Manual Build Linux .tar.gz and .deb

on:
  workflow_dispatch:

jobs:
  get-version:
    name: Extract Version from pubspec.yaml
    runs-on: ubuntu-latest
    outputs:
      VERSION_NAME: ${{ steps.extract_version.outputs.VERSION_NAME }}
      VERSION_NUMBER: ${{ steps.extract_version.outputs.VERSION_NUMBER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          VERSION_FULL=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          VERSION_NAME=$(echo $VERSION_FULL | cut -d '+' -f 1)
          VERSION_NUMBER=$(echo $VERSION_FULL | cut -d '+' -f 2)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          echo "Extracted Version Name: $VERSION_NAME"
          echo "Extracted Version Number: $VERSION_NUMBER"

  build-linux:
    name: Build Linux .tar.gz and .deb
    runs-on: ubuntu-latest
    needs: get-version
    env:
      LINUX_RELEASE_PATH: build/linux/x64/release/bundle
      DEBIAN_RELEASE_PATH: build/linux/x64/release/debian
      VERSION_NAME: ${{ needs.get-version.outputs.VERSION_NAME }}
      VERSION_NUMBER: ${{ needs.get-version.outputs.VERSION_NUMBER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Decode .env
        run: echo "${{ secrets.ENV }}" | base64 --decode > .env

      - name: Update version in debian.yaml
        run: sed -i 's/<REPLACE_VERSION_NUMBER_ACTIONS>/${{ env.VERSION_NAME }}/g' debian/debian.yaml

      - name: Update dependencies list
        run: sudo apt-get update

      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libcurl4-openssl-dev libsecret-1-dev libjsoncpp-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          flutter-version: 3.32.8
      - run: flutter clean
      - run: flutter pub get

      - name: Generate Git commit hash
        run: dart run tools/generate_git_commit.dart

      - name: Build linux
        run: flutter build linux --release

      - name: Install flutter_to_debian
        run: dart pub global activate flutter_to_debian

      - name: Add executable permissions to debian/scripts/postrm
        run: chmod +x debian/scripts/postrm

      - name: Generate .deb package
        run: flutter_to_debian

      - name: Move .deb package to project root
        run: mv ${{ env.DEBIAN_RELEASE_PATH }}/PiHoleClient_${{ env.VERSION_NAME }}_amd64.deb PiHoleClient_${{ env.VERSION_NAME }}_Linux_amd64.deb

      - name: Generate .tar.gz package
        run: |
          tar -czf PiHoleClient_${{ env.VERSION_NAME }}_Linux.tar.gz -C $LINUX_RELEASE_PATH \
            data \
            lib \
            pi-hole-client

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            PiHoleClient_${{ env.VERSION_NAME }}_Linux_amd64.deb
            PiHoleClient_${{ env.VERSION_NAME }}_Linux.tar.gz

